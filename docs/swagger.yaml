basePath: /
definitions:
  models.CreateUserRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      membership_level:
        description: 'Default: Bronze'
        type: string
      phone_number:
        type: string
    required:
    - email
    - first_name
    - last_name
    - phone_number
    type: object
  models.Transfer:
    properties:
      amount:
        description: Points amount
        type: integer
      completedAt:
        description: Completed timestamp
        type: string
      createdAt:
        description: Created timestamp
        type: string
      failReason:
        description: Failure reason if failed
        type: string
      fromUserId:
        description: Sender user ID
        type: integer
      idemKey:
        description: Idempotency-Key (primary lookup)
        type: string
      note:
        description: Optional note
        type: string
      status:
        allOf:
        - $ref: '#/definitions/models.TransferStatus'
        description: Transfer status
      toUserId:
        description: Receiver user ID
        type: integer
      transferId:
        description: Internal ID (optional in response)
        type: integer
      updatedAt:
        description: Updated timestamp
        type: string
    type: object
  models.TransferCreateRequest:
    properties:
      amount:
        minimum: 1
        type: integer
      fromUserId:
        minimum: 1
        type: integer
      note:
        type: string
      toUserId:
        minimum: 1
        type: integer
    required:
    - amount
    - fromUserId
    - toUserId
    type: object
  models.TransferCreateResponse:
    properties:
      transfer:
        $ref: '#/definitions/models.Transfer'
    type: object
  models.TransferGetResponse:
    properties:
      transfer:
        $ref: '#/definitions/models.Transfer'
    type: object
  models.TransferListResponse:
    properties:
      data:
        items:
          $ref: '#/definitions/models.Transfer'
        type: array
      page:
        type: integer
      pageSize:
        type: integer
      total:
        type: integer
    type: object
  models.TransferStatus:
    enum:
    - pending
    - processing
    - completed
    - failed
    - cancelled
    - reversed
    type: string
    x-enum-varnames:
    - StatusPending
    - StatusProcessing
    - StatusCompleted
    - StatusFailed
    - StatusCancelled
    - StatusReversed
  models.UpdateUserRequest:
    properties:
      email:
        type: string
      first_name:
        type: string
      last_name:
        type: string
      membership_level:
        type: string
      phone_number:
        type: string
      points:
        description: pointer เพื่อให้แยกระหว่าง 0 กับ null
        type: integer
    type: object
host: localhost:3000
info:
  contact:
    email: support@kbtg.com
    name: KBTG Team
  description: |-
    Backend API สำหรับจัดการข้อมูลผู้ใช้และระบบโอนแต้ม

    ## Features
    - User Management (CRUD)
    - Points Transfer System
    - Idempotency Support
    - Point Ledger (Audit Trail)
    - Transaction Safety
  license:
    name: MIT
    url: https://opensource.org/licenses/MIT
  title: KBTG Backend API
  version: "1.0"
paths:
  /transfers:
    get:
      consumes:
      - application/json
      description: ค้น/ดูประวัติการโอน (กรองด้วย userId เท่านั้น)
      parameters:
      - description: User ID
        in: query
        name: userId
        required: true
        type: integer
      - default: 1
        description: Page number
        in: query
        name: page
        type: integer
      - default: 20
        description: Page size
        in: query
        name: pageSize
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TransferListResponse'
        "400":
          description: Validation error
          schema:
            additionalProperties: true
            type: object
      summary: Get transfer history
      tags:
      - Transfers
    post:
      consumes:
      - application/json
      description: สร้างคำสั่งโอนแต้ม (ระบบจะสร้าง Idempotency-Key ให้อัตโนมัติ)
      parameters:
      - description: Transfer data
        in: body
        name: transfer
        required: true
        schema:
          $ref: '#/definitions/models.TransferCreateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.TransferCreateResponse'
        "400":
          description: Validation error
          schema:
            additionalProperties: true
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Insufficient points
          schema:
            additionalProperties: true
            type: object
        "422":
          description: Cannot transfer to yourself
          schema:
            additionalProperties: true
            type: object
      summary: Create points transfer
      tags:
      - Transfers
  /transfers/{id}:
    get:
      consumes:
      - application/json
      description: ดูสถานะคำสั่งโอน (ใช้ idemKey เป็น id)
      parameters:
      - description: Idempotency Key (idemKey)
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.TransferGetResponse'
        "404":
          description: Transfer not found
          schema:
            additionalProperties: true
            type: object
      summary: Get transfer by ID
      tags:
      - Transfers
  /users:
    get:
      consumes:
      - application/json
      description: ดึงรายการผู้ใช้ทั้งหมด
      produces:
      - application/json
      responses:
        "200":
          description: success, data, total
          schema:
            additionalProperties: true
            type: object
        "500":
          description: error response
          schema:
            additionalProperties: true
            type: object
      summary: Get all users
      tags:
      - Users
    post:
      consumes:
      - application/json
      description: สร้างผู้ใช้ใหม่
      parameters:
      - description: User data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.CreateUserRequest'
      produces:
      - application/json
      responses:
        "201":
          description: success, message, data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Validation error
          schema:
            additionalProperties: true
            type: object
        "409":
          description: Email already exists
          schema:
            additionalProperties: true
            type: object
      summary: Create a new user
      tags:
      - Users
  /users/{id}:
    delete:
      consumes:
      - application/json
      description: ลบผู้ใช้
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success, message
          schema:
            additionalProperties: true
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties: true
            type: object
      summary: Delete user
      tags:
      - Users
    get:
      consumes:
      - application/json
      description: ดึงข้อมูลผู้ใช้รายบุคคล
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      produces:
      - application/json
      responses:
        "200":
          description: success, data
          schema:
            additionalProperties: true
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties: true
            type: object
      summary: Get user by ID
      tags:
      - Users
    put:
      consumes:
      - application/json
      description: แก้ไขข้อมูลผู้ใช้
      parameters:
      - description: User ID
        in: path
        name: id
        required: true
        type: integer
      - description: User update data
        in: body
        name: user
        required: true
        schema:
          $ref: '#/definitions/models.UpdateUserRequest'
      produces:
      - application/json
      responses:
        "200":
          description: success, message, data
          schema:
            additionalProperties: true
            type: object
        "400":
          description: Validation error
          schema:
            additionalProperties: true
            type: object
        "404":
          description: User not found
          schema:
            additionalProperties: true
            type: object
      summary: Update user
      tags:
      - Users
schemes:
- http
swagger: "2.0"
