{
    "schemes": [
        "http"
    ],
    "swagger": "2.0",
    "info": {
        "description": "Backend API สำหรับจัดการข้อมูลผู้ใช้และระบบโอนแต้ม\n\n## Features\n- User Management (CRUD)\n- Points Transfer System\n- Idempotency Support\n- Point Ledger (Audit Trail)\n- Transaction Safety",
        "title": "KBTG Backend API",
        "contact": {
            "name": "KBTG Team",
            "email": "support@kbtg.com"
        },
        "license": {
            "name": "MIT",
            "url": "https://opensource.org/licenses/MIT"
        },
        "version": "1.0"
    },
    "host": "localhost:3000",
    "basePath": "/",
    "paths": {
        "/transfers": {
            "get": {
                "description": "ค้น/ดูประวัติการโอน (กรองด้วย userId เท่านั้น)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transfers"
                ],
                "summary": "Get transfer history",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "userId",
                        "in": "query",
                        "required": true
                    },
                    {
                        "type": "integer",
                        "default": 1,
                        "description": "Page number",
                        "name": "page",
                        "in": "query"
                    },
                    {
                        "type": "integer",
                        "default": 20,
                        "description": "Page size",
                        "name": "pageSize",
                        "in": "query"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TransferListResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "สร้างคำสั่งโอนแต้ม (ระบบจะสร้าง Idempotency-Key ให้อัตโนมัติ)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transfers"
                ],
                "summary": "Create points transfer",
                "parameters": [
                    {
                        "description": "Transfer data",
                        "name": "transfer",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.TransferCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "Created",
                        "schema": {
                            "$ref": "#/definitions/models.TransferCreateResponse"
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Insufficient points",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "422": {
                        "description": "Cannot transfer to yourself",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/transfers/{id}": {
            "get": {
                "description": "ดูสถานะคำสั่งโอน (ใช้ idemKey เป็น id)",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Transfers"
                ],
                "summary": "Get transfer by ID",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Idempotency Key (idemKey)",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.TransferGetResponse"
                        }
                    },
                    "404": {
                        "description": "Transfer not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/users": {
            "get": {
                "description": "ดึงรายการผู้ใช้ทั้งหมด",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get all users",
                "responses": {
                    "200": {
                        "description": "success, data, total",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "500": {
                        "description": "error response",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "post": {
                "description": "สร้างผู้ใช้ใหม่",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Create a new user",
                "parameters": [
                    {
                        "description": "User data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.CreateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "201": {
                        "description": "success, message, data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "409": {
                        "description": "Email already exists",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        },
        "/users/{id}": {
            "get": {
                "description": "ดึงข้อมูลผู้ใช้รายบุคคล",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Get user by ID",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success, data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "put": {
                "description": "แก้ไขข้อมูลผู้ใช้",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    },
                    {
                        "description": "User update data",
                        "name": "user",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/models.UpdateUserRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success, message, data",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "400": {
                        "description": "Validation error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            },
            "delete": {
                "description": "ลบผู้ใช้",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Users"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "type": "integer",
                        "description": "User ID",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "success, message",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    },
                    "404": {
                        "description": "User not found",
                        "schema": {
                            "type": "object",
                            "additionalProperties": true
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "models.CreateUserRequest": {
            "type": "object",
            "required": [
                "email",
                "first_name",
                "last_name",
                "phone_number"
            ],
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "membership_level": {
                    "description": "Default: Bronze",
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                }
            }
        },
        "models.Transfer": {
            "type": "object",
            "properties": {
                "amount": {
                    "description": "Points amount",
                    "type": "integer"
                },
                "completedAt": {
                    "description": "Completed timestamp",
                    "type": "string"
                },
                "createdAt": {
                    "description": "Created timestamp",
                    "type": "string"
                },
                "failReason": {
                    "description": "Failure reason if failed",
                    "type": "string"
                },
                "fromUserId": {
                    "description": "Sender user ID",
                    "type": "integer"
                },
                "idemKey": {
                    "description": "Idempotency-Key (primary lookup)",
                    "type": "string"
                },
                "note": {
                    "description": "Optional note",
                    "type": "string"
                },
                "status": {
                    "description": "Transfer status",
                    "allOf": [
                        {
                            "$ref": "#/definitions/models.TransferStatus"
                        }
                    ]
                },
                "toUserId": {
                    "description": "Receiver user ID",
                    "type": "integer"
                },
                "transferId": {
                    "description": "Internal ID (optional in response)",
                    "type": "integer"
                },
                "updatedAt": {
                    "description": "Updated timestamp",
                    "type": "string"
                }
            }
        },
        "models.TransferCreateRequest": {
            "type": "object",
            "required": [
                "amount",
                "fromUserId",
                "toUserId"
            ],
            "properties": {
                "amount": {
                    "type": "integer",
                    "minimum": 1
                },
                "fromUserId": {
                    "type": "integer",
                    "minimum": 1
                },
                "note": {
                    "type": "string"
                },
                "toUserId": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "models.TransferCreateResponse": {
            "type": "object",
            "properties": {
                "transfer": {
                    "$ref": "#/definitions/models.Transfer"
                }
            }
        },
        "models.TransferGetResponse": {
            "type": "object",
            "properties": {
                "transfer": {
                    "$ref": "#/definitions/models.Transfer"
                }
            }
        },
        "models.TransferListResponse": {
            "type": "object",
            "properties": {
                "data": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.Transfer"
                    }
                },
                "page": {
                    "type": "integer"
                },
                "pageSize": {
                    "type": "integer"
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.TransferStatus": {
            "type": "string",
            "enum": [
                "pending",
                "processing",
                "completed",
                "failed",
                "cancelled",
                "reversed"
            ],
            "x-enum-varnames": [
                "StatusPending",
                "StatusProcessing",
                "StatusCompleted",
                "StatusFailed",
                "StatusCancelled",
                "StatusReversed"
            ]
        },
        "models.UpdateUserRequest": {
            "type": "object",
            "properties": {
                "email": {
                    "type": "string"
                },
                "first_name": {
                    "type": "string"
                },
                "last_name": {
                    "type": "string"
                },
                "membership_level": {
                    "type": "string"
                },
                "phone_number": {
                    "type": "string"
                },
                "points": {
                    "description": "pointer เพื่อให้แยกระหว่าง 0 กับ null",
                    "type": "integer"
                }
            }
        }
    }
}